<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用LNMP手动搭建博客过程</title>
      <link href="2021/01/17/%E5%88%A9%E7%94%A8LNMP%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/"/>
      <url>2021/01/17/%E5%88%A9%E7%94%A8LNMP%E6%89%8B%E5%8A%A8%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<hr><h1 id="Linux部分："><a href="#Linux部分：" class="headerlink" title="Linux部分："></a>Linux部分：</h1><pre><code>系统中selinx需要关闭；并且要确保/tmp目录的权限为1777</code></pre><p><img src="/images/LNMP/frist.png" alt="frist"></p><a id="more"></a><hr><h1 id="Nginx部分："><a href="#Nginx部分：" class="headerlink" title="Nginx部分："></a>Nginx部分：</h1><pre><code>yum install nginx            ===============下载nginxvim /etc/nginx/nginx.conf        =========修改nginx的配置文件（注意使用者改成了www）</code></pre><p><img src="/images/LNMP/second.png" alt="second"></p><pre><code>systemctl start nginx启动systemctl enable nginx 设置成开机自启mysql部分（mysql下载太慢了，用mariadb代替）：yum install mariadb-server     ===========下载mariadbsystemctl start mariadb         =============启动mariadbsystemctl enable mariadb    ============开机自启数据库启动完成后可以输入mysql查看是否能进入数据库，如果成功ctrl+d退出数据库开始创建数据库密码信息：mysqladmin -u root password &#39;123456&#39;    ========设置登录mariadb的登录用户为root密码为123456；使用mysql -uroot -p123456登录</code></pre><p><img src="/images/LNMP/third.png" alt="third"></p><pre><code> php部分：rpm-qa ｜grep php        =======================检查系统是否有自带的phpyum remove php-mysql php php-fpm php-common        ====移除自带的php部分rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmrpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpmyum install php71w php71w-cli php71w-common php71w-devel php71w-embedded  php71w-gd php71w-mcrypt     php71w-mbstring php71w-pdo php71w-xml php71w-fpm php71w-mysqlnd php71w-opcache  php71w-pecl-memcached     php71w-pecl-redis php71w-pecl-mongodb</code></pre><hr><h1 id="更新yum源并下载php相关"><a href="#更新yum源并下载php相关" class="headerlink" title="更新yum源并下载php相关"></a>更新yum源并下载php相关</h1><p>vim /etc/php-fpm.d/<a href="http://www.conf/">www.conf</a>            ====================修改配置文件</p><p><img src="/images/LNMP/fourth.png" alt="fourth"></p><pre><code>将原先的apache用户修改为www用户与nginx的用户保持一致。至此，启动php服务systemctl start php-fpm</code></pre><hr><pre><code>Nginx和php之间建立关系：通过fastcgi建立接口：首先在/html/blog/blog.conf中做如下配置</code></pre><p><img src="/images/LNMP/fifth.png" alt="fifth"></p><pre><code>保存退出后nginx -t =================检查是否有语法错误nginx -s reload =============重启nginx服务进行访问测试：咱们在/html/blog目录下创建一个test_php.php文件</code></pre><p><img src="/images/LNMP/sixth.png" alt="sixth"></p><pre><code>保存退出后在hosts中做映射尝试访问该网站：blog.ceshiu.com/test_php.php</code></pre><p><img src="/images/LNMP/seventh.png" alt="seventh"></p><pre><code>访问后能看到以上的页面就说明php已经和nginx建立联系了～</code></pre><hr><h1 id="php和mysql之间建立联系："><a href="#php和mysql之间建立联系：" class="headerlink" title="php和mysql之间建立联系："></a>php和mysql之间建立联系：</h1><pre><code>依旧在/html/blog目录下创建test_mysql.php</code></pre><p><img src="/images/LNMP/eighth.png" alt="eighth"></p><pre><code>同样，在本机网站上进行访问测试：blog.ceshi.com/test_mysql.php</code></pre><p><img src="/images/LNMP/ninth.png" alt="ninth"><br>    看到这样的画面就表示php和mysql的连接已经创建成功～</p><hr><pre><code>此时我们的lnmp之间的联系已经完成，接下来可以在开源网站上下载相关的代码信息这里我使用的是wordpress博客的代码：</code></pre><p><img src="/images/LNMP/tenth.png" alt="tenth"></p><pre><code>wget https://wordpress.org/latest.tar.gz ================直接在虚拟机上下载该文件（直接下载该文件上传到虚拟机中也是可以的）tar zxvf  latest.tar.gz=============解压下载后的文件会看到一个wordpress的文件夹进入后有以下文件</code></pre><p><img src="/images/LNMP/eleventh.png" alt="eleventh"></p><pre><code>这里要注意我们的nginx下root定义的站点目录是/html/blog，所以咱们需要把wordpress里面的文件全部移动到站点目录下面mv ./wordpress/*    /html/blog=================移动wordpress下所有文件到站点目录chown -R /html/blog========================修改blog目录下所有文件的属主属组为www    此时访问我们的网页blog.ceshi.com就会看到这样的页面</code></pre><p><img src="/images/LNMP/twelfth.png" alt="twelfth"></p><pre><code>点击lets go继续会让我们提交数据库信息用来存储</code></pre><p><img src="/images/LNMP/thirteenth.png" alt="thirteenth"></p><pre><code>这里会让我们提供一个数据库：为了好记将数据库名字和用户都设置为wordpress，密码123456进入数据库：mysq -uroot -p123456=================进入数据库create database . wordpress;============创建wordpress数据库grant all on wprdpress.* to &#39;wordpress&#39;@&#39;localhost&#39; identified by &#39;123456&#39;;创建一个名为wordpress密码为123456的用户，并将权限设为所有。检查是否创建成功：</code></pre><h2 id><a href="#" class="headerlink" title></a><img src="/images/LNMP/fourteenth.png" alt="fourteenth"></h2><pre><code>最后打开博客就可以进行访问了（这个是在虚拟机上映射，如果想真正搭建可供访问的博客需要购买服务器和域名）</code></pre><p><img src="/images/LNMP/fifteenth.png" alt="fifteenth"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2021/01/16/hello-world/"/>
      <url>2021/01/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
